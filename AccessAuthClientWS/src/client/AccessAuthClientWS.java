/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.Component;
import java.awt.Event;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.event.ChangeEvent;



/**
 *
 * @author edilvolima
 */
public class AccessAuthClientWS extends javax.swing.JFrame {

    private static final String APP_NAME = "ClientAuth";
    private static AccessAuthWS stub;
    private static String session;
    private static String userName;

    public static String getUserName() {
        return userName;
    }

    public static void setUserName(String userName) {
        AccessAuthClientWS.userName = userName;
    }

    public static void setSession(String session) {
        AccessAuthClientWS.session = session;
    }
    
    public static String getSession(){
        return AccessAuthClientWS.session;
    }
    
    public static AccessAuthWS getStub(){
        return stub;
    }

    public static String getServerAddress() {
        return serverAddress;
    }
    
    private static String serverAddress = "localhost";
    private static String port = "8080";
    private static URL url;
    private static String context = "AccessAuthWS";
   

    /**
     * Creates new form ClientGUI
     *
     */
    public AccessAuthClientWS() {
        initComponents();
        multiAbas.setSelectedIndex(3);
    }

    public void config() {

         try {
            url = new URL("http://" +serverAddress +":" +port +"/" +context +"/AccessAuthWS?wsdl");
        } catch (MalformedURLException ex) {
            Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
        }
        AccessAuthWS_Service service = new AccessAuthWS_Service(url);
        stub = service.getAccessAuthWSPort();
    }

    public static void setServerAddress(String serverAddress) {
        AccessAuthClientWS.serverAddress = serverAddress;
    }

    public static void setPort(String port) {
        AccessAuthClientWS.port = port;
    }

    public static void setService(String context) {
        AccessAuthClientWS.context = context;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenuSession = new javax.swing.JPopupMenu();
        labelFrame = new javax.swing.JLabel();
        pnlStatusClient = new javax.swing.JPanel();
        labelStatus = new javax.swing.JLabel();
        labelStatusClient = new javax.swing.JLabel();
        multiAbas = new javax.swing.JTabbedPane();
        abaLogin = new javax.swing.JPanel();
        pnlLogin = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameLogin = new javax.swing.JTextField();
        passwdLogin = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        buttonLogin = new javax.swing.JButton();
        abaRegister = new javax.swing.JPanel();
        pnlRegister = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameRegister = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        passwdRegister = new javax.swing.JTextField();
        buttonRegister = new javax.swing.JButton();
        abaManipulate = new javax.swing.JPanel();
        pnlObjects = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listObjects = new javax.swing.JList();
        buttonDeleteObject = new javax.swing.JButton();
        buttonCreateObject = new javax.swing.JButton();
        buttonGetObject = new javax.swing.JButton();
        abaCofig = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        nameServiceRMI = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        namePortService = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        nameAddressServer = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        buttonConfirmConfig = new javax.swing.JButton();
        labelServerConnect = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        labelFrame.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        labelFrame.setText("Client");

        labelStatus.setText("status: ");

        labelStatusClient.setText("offline");

        javax.swing.GroupLayout pnlStatusClientLayout = new javax.swing.GroupLayout(pnlStatusClient);
        pnlStatusClient.setLayout(pnlStatusClientLayout);
        pnlStatusClientLayout.setHorizontalGroup(
            pnlStatusClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStatusClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelStatusClient)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlStatusClientLayout.setVerticalGroup(
            pnlStatusClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusClientLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlStatusClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStatus)
                    .addComponent(labelStatusClient))
                .addContainerGap())
        );

        multiAbas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                multiAbasStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel2.setText("login");

        jLabel4.setText("Name:");

        jLabel5.setText("Password:");

        buttonLogin.setText("Login");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passwdLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
            .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLoginLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(nameLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                    .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(passwdLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLoginLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlLoginLayout.createSequentialGroup()
                            .addComponent(nameLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel5))
                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout abaLoginLayout = new javax.swing.GroupLayout(abaLogin);
        abaLogin.setLayout(abaLoginLayout);
        abaLoginLayout.setHorizontalGroup(
            abaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        abaLoginLayout.setVerticalGroup(
            abaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        multiAbas.addTab("Login", abaLogin);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel6.setText("Sign up");

        jLabel7.setText("Name:");

        jLabel8.setText("Password:");

        buttonRegister.setText("Sign up");
        buttonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegisterLayout = new javax.swing.GroupLayout(pnlRegister);
        pnlRegister.setLayout(pnlRegisterLayout);
        pnlRegisterLayout.setHorizontalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
            .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlRegisterLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(nameRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addComponent(passwdRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlRegisterLayout.setVerticalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
            .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlRegisterLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlRegisterLayout.createSequentialGroup()
                            .addComponent(nameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(passwdRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(buttonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout abaRegisterLayout = new javax.swing.GroupLayout(abaRegister);
        abaRegister.setLayout(abaRegisterLayout);
        abaRegisterLayout.setHorizontalGroup(
            abaRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        abaRegisterLayout.setVerticalGroup(
            abaRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        multiAbas.addTab("Register", abaRegister);

        abaManipulate.setComponentPopupMenu(popupMenuSession);

        jScrollPane2.setViewportView(listObjects);

        buttonDeleteObject.setText("delete");
        buttonDeleteObject.setPreferredSize(new java.awt.Dimension(100, 40));
        buttonDeleteObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteObjectActionPerformed(evt);
            }
        });

        buttonCreateObject.setText("create");
        buttonCreateObject.setPreferredSize(new java.awt.Dimension(100, 40));
        buttonCreateObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateObjectActionPerformed(evt);
            }
        });

        buttonGetObject.setText("get");
        buttonGetObject.setPreferredSize(new java.awt.Dimension(100, 40));
        buttonGetObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGetObjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlObjectsLayout = new javax.swing.GroupLayout(pnlObjects);
        pnlObjects.setLayout(pnlObjectsLayout);
        pnlObjectsLayout.setHorizontalGroup(
            pnlObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObjectsLayout.createSequentialGroup()
                .addGroup(pnlObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlObjectsLayout.createSequentialGroup()
                        .addComponent(buttonCreateObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(buttonGetObject, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(buttonDeleteObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        pnlObjectsLayout.setVerticalGroup(
            pnlObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDeleteObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGetObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCreateObject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout abaManipulateLayout = new javax.swing.GroupLayout(abaManipulate);
        abaManipulate.setLayout(abaManipulateLayout);
        abaManipulateLayout.setHorizontalGroup(
            abaManipulateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaManipulateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlObjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        abaManipulateLayout.setVerticalGroup(
            abaManipulateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaManipulateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlObjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        multiAbas.addTab("Manipulate Object", abaManipulate);

        abaCofig.setComponentPopupMenu(popupMenuSession);

        jLabel11.setText("Context WS");

        nameServiceRMI.setText("AccessAuthWS");
        nameServiceRMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameServiceRMIActionPerformed(evt);
            }
        });

        jLabel12.setText("Port");

        namePortService.setText("8080");

        jLabel13.setText("Address Server");

        nameAddressServer.setText("localhost");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel14.setText("Connect Configs");

        buttonConfirmConfig.setText("Confirm");
        buttonConfirmConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaCofigLayout = new javax.swing.GroupLayout(abaCofig);
        abaCofig.setLayout(abaCofigLayout);
        abaCofigLayout.setHorizontalGroup(
            abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaCofigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaCofigLayout.createSequentialGroup()
                        .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameAddressServer)
                            .addGroup(abaCofigLayout.createSequentialGroup()
                                .addComponent(namePortService, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 176, Short.MAX_VALUE))
                            .addComponent(nameServiceRMI)))
                    .addGroup(abaCofigLayout.createSequentialGroup()
                        .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(buttonConfirmConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        abaCofigLayout.setVerticalGroup(
            abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaCofigLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(nameAddressServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(nameServiceRMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(abaCofigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namePortService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(buttonConfirmConfig)
                .addGap(23, 23, 23))
        );

        multiAbas.addTab("Config", abaCofig);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(multiAbas)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelFrame)
                        .addGap(18, 18, 18)
                        .addComponent(labelServerConnect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlStatusClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelFrame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(pnlStatusClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelServerConnect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(multiAbas, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed

        String passwd = String.copyValueOf(passwdLogin.getPassword());
        System.out.println(passwd);
        try {
            setSession(stub.login(nameLogin.getText(), passwd));
        } catch (Exception_Exception ex) {
            Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this,
                "User " + nameLogin.getText() + " logado com sucesso!");
        System.out.println("Login realizado com sucesso!\n"+AccessAuthClientWS.session);
        setUserName(nameLogin.getText());
        labelStatusClient.setText("conectado");
        multiAbas.setSelectedIndex(2);
        
        
    }//GEN-LAST:event_buttonLoginActionPerformed

    private void buttonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegisterActionPerformed
        try {
            if (stub.createUser(nameRegister.getText(), passwdRegister.getText())) {
                
                JOptionPane.showMessageDialog(rootPane,
                        "User " + nameRegister.getText() + " registrado com sucesso!");
            }
        } catch (Exception_Exception ex) {
            Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Login realizado com sucesso!");
    }//GEN-LAST:event_buttonRegisterActionPerformed

    private void multiAbasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_multiAbasStateChanged
        // TODO add your handling code here:
        switch (multiAbas.getSelectedIndex()) {

            // login
            case 0: {

                if (isClientLogged()) {
                    pnlLogin.setEnabled(false);
                    setEnabledComponents(pnlLogin.getComponents(), false);
                } else {
                    pnlLogin.setEnabled(true);
                    setEnabledComponents(pnlLogin.getComponents(), true);
                }

            }

            // register
            case 1:

                if (isClientLogged()) {
                    pnlRegister.setEnabled(false);
                    setEnabledComponents(pnlRegister.getComponents(), false);
                } else {
                    pnlRegister.setEnabled(true);
                    setEnabledComponents(pnlRegister.getComponents(), true);
                }

            // manipulate objects
            case 2: {

                if (isClientLogged()) {
                    pnlObjects.setEnabled(true);
                    setEnabledComponents(pnlObjects.getComponents(), true);
                    fillListObject();
                } else {
                    pnlObjects.setEnabled(false);
                    setEnabledComponents(pnlObjects.getComponents(), false);
                    listObjects.removeAll();
                }
                break;
            }
            // sessões
            case 3:

            default:
                break;

        }

    }//GEN-LAST:event_multiAbasStateChanged

    private void buttonConfirmConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmConfigActionPerformed
        setPort(namePortService.getText());
        setServerAddress(nameAddressServer.getText());
        setService(nameServiceRMI.getText());
        config();
        labelServerConnect.setText(getServerAddress());
    }//GEN-LAST:event_buttonConfirmConfigActionPerformed

    private void buttonCreateObjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateObjectActionPerformed
        // TODO add your handling code here:
        CreateObjUI obj = new CreateObjUI(this, true);
        obj.setTitle("Client - Create object");
        obj.setLocationRelativeTo(this);
        obj.setVisible(true);

        if (obj.getReturnStatus() == CreateObjUI.RET_OK) {
            try {
                if (stub.writeObject(session, CreateObjUI.getObject())) {
                    fillListObject();
                }
            } catch (Exception_Exception ex) {
                Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonCreateObjectActionPerformed

  private void buttonGetObjectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonGetObjectActionPerformed
  {//GEN-HEADEREND:event_buttonGetObjectActionPerformed
      if (listObjects.getLastVisibleIndex() == -1) {
          JOptionPane.showMessageDialog(this, "A lista de objetos está vazia.", APP_NAME, INFORMATION_MESSAGE, null);
          return;
      }

      if (listObjects.getSelectedIndex() == -1) {
          JOptionPane.showMessageDialog(this, "Selecione um objeto da lista.", APP_NAME, INFORMATION_MESSAGE, null);
          return;
      }

      Object selected = listObjects.getSelectedValue();
      String idObject = getObjectIDFrom(selected);
      AbstractShape object = null;

      try {
          object = stub.getObject(session, idObject);
      } catch (Exception_Exception ex) {
          Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
      }
      JOptionPane.showMessageDialog(this, String.format("Lendo os dados do objeto '%s'", object.toString()), APP_NAME, INFORMATION_MESSAGE, null);
      
  }//GEN-LAST:event_buttonGetObjectActionPerformed

  private void buttonDeleteObjectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonDeleteObjectActionPerformed
  {//GEN-HEADEREND:event_buttonDeleteObjectActionPerformed
      if (listObjects.getLastVisibleIndex() == -1) {
          JOptionPane.showMessageDialog(this, "A lista de objetos está vazia.", APP_NAME, INFORMATION_MESSAGE, null);
          return;
      }

      if (listObjects.getSelectedIndex() == -1) {
          JOptionPane.showMessageDialog(this, "Selecione um objeto da lista.", APP_NAME, INFORMATION_MESSAGE, null);
          return;
      }

      Object selected = listObjects.getSelectedValue();
      String idObject = getObjectIDFrom(selected);
      if (JOptionPane.showConfirmDialog(this, String.format("Confirme a remoção do objeto '%s'.", selected), "Remove Object", YES_NO_OPTION, QUESTION_MESSAGE) == YES_OPTION) {
          try {
              if (stub.removeObject(session, idObject)) {
                  fillListObject();
              }
          } catch (Exception_Exception ex) {
              Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
          }

      }
  }//GEN-LAST:event_buttonDeleteObjectActionPerformed

    private void nameServiceRMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameServiceRMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameServiceRMIActionPerformed

    private String getObjectIDFrom(Object selected) {
        // expressao regular para pegar o id do objeto
        String[] idObject = selected.toString().split("\\s");
        return idObject[2];
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccessAuthClientWS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccessAuthClientWS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccessAuthClientWS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccessAuthClientWS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AccessAuthClientWS().setVisible(true);
                } catch (NullPointerException ex) {
                    Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abaCofig;
    private javax.swing.JPanel abaLogin;
    private javax.swing.JPanel abaManipulate;
    private javax.swing.JPanel abaRegister;
    private javax.swing.JButton buttonConfirmConfig;
    private javax.swing.JButton buttonCreateObject;
    private javax.swing.JButton buttonDeleteObject;
    private javax.swing.JButton buttonGetObject;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JButton buttonRegister;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelFrame;
    private javax.swing.JLabel labelServerConnect;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelStatusClient;
    private javax.swing.JList listObjects;
    private javax.swing.JTabbedPane multiAbas;
    private javax.swing.JTextField nameAddressServer;
    private javax.swing.JTextField nameLogin;
    private javax.swing.JTextField namePortService;
    private javax.swing.JTextField nameRegister;
    private javax.swing.JTextField nameServiceRMI;
    private javax.swing.JPasswordField passwdLogin;
    private javax.swing.JTextField passwdRegister;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlObjects;
    private javax.swing.JPanel pnlRegister;
    private javax.swing.JPanel pnlStatusClient;
    private javax.swing.JPopupMenu popupMenuSession;
    // End of variables declaration//GEN-END:variables

    private void setEnabledComponents(Component[] components, boolean enable) {
        for (Component component : components) {
            component.setEnabled(enable);
        }
    }

    private void fillListObject() {
        if (isClientLogged()) {
            try {
                String string[] = stub.getListObject(session).split(";");
                listObjects.setListData(string);
            } catch (Exception_Exception ex) {
                Logger.getLogger(AccessAuthClientWS.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private boolean isClientLogged() {
        return labelStatusClient.getText().contains("conectado");
    }
}
